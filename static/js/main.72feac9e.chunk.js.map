{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/users.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","redux/profile-reducer.tsx","components/Profile/MyPosts/Posts/Posts.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.tsx","assets/imges/user.png","components/Users/Users.tsx","assets/imges/preloader.svg","components/Users/UsersContainer.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","initialState","posts","id","message","likeCount","newPostText","Posts","props","MyPosts","postsElements","map","p","newPostElement","React","createRef","postsBlock","ref","value","onChange","text","current","updateNewPostText","onClick","addPost","MyPostsContainer","connect","state","profilePage","dispatch","action","type","newText","onPostChangeCreator","ProfileInfo","descriptionBlock","Profile","DialogItem","path","dialog","name","Message","Dialogs","body","dialogsPage","newMessageBody","dialogsElements","dialogs","el","messagesElements","messages","dialogs_items","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","UpdateNewMessageBodyAC","users","pageSize","totalUsersCount","currentPage","isFetching","Users","pagesCount","Math","ceil","pages","i","push","console","log","onPageChanged","styles","selectedPage","u","photos","small","userPhoto","photo","followed","unfollow","follow","status","UsersContainer","setCurrentPage","toggleIsFetching","axios","get","then","response","setUsers","data","items","this","setUsersTotalCount","totalCount","preloader","Component","usersPage","userId","App","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.72feac9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xw7E\",\"dialog\":\"Dialogs_dialog__LCnYb\",\"messages\":\"Dialogs_messages__2BO8o\",\"message\":\"Dialogs_message__1C9mB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__NzxG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__3RoKM\",\"selectedPage\":\"users_selectedPage__QJMNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yD6yM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__3gfG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__TobT7\"};","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header =()=>{\r\n    return(\r\n    <header className={s.header} >\r\n        <img src=\"https://oir.mobi/uploads/posts/2020-01/1579842194_46-p-chernie-emblemi-57.png\"/>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar =()=>{\r\n    return(\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                 <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink> \r\n            </div>\r\n            <div className={s.item}>\r\n                 <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink> \r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to =\"/users\" activeClassName={s.activeLink} >Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                 <NavLink to =\"/news\" activeClassName={s.activeLink} >News</NavLink> \r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to =\"/music\" activeClassName={s.activeLink}>Music</NavLink> \r\n            </div>\r\n    </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n  }\r\n  \r\n\r\nexport type ProfilePagePropsType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n  }\r\n  \r\n\r\n\r\n\r\nlet initialState:ProfilePagePropsType={\r\n    posts: [\r\n      { id: 1, message: \"hi\", likeCount: 12 },\r\n      { id: 2, message: \"hid\", likeCount: 12 },\r\n      { id: 3, message: \"hifddf\", likeCount: 20 },\r\n      { id: 4, message: \"hisdfdsf\", likeCount: 14 },\r\n    ],\r\n    newPostText: \"\"\r\n\r\n  }\r\n\r\nexport const profileReducer =(state=initialState,action: MainActionType)=>{\r\n    switch (action.type) {\r\n        case\"ADD-POST\":{\r\n            return  {\r\n              ...state,\r\n                newPostText :\"\",\r\n               posts:[...state.posts,{id: 5,message: state.newPostText, likeCount: 0}]\r\n            }\r\n        }\r\n\r\n        case \"UPDATE-NEW-POST-TEXT\": {\r\n            return  {\r\n              ...state,newPostText : action.newText\r\n            \r\n            }\r\n        }\r\n        default:return state\r\n    }\r\n}\r\ntype MainActionType = ReturnType<typeof addPostActionCreator> | ReturnType<typeof  onPostChangeCreator>\r\n\r\nexport let addPostActionCreator = ()=>{\r\n    return{\r\n       type:\"ADD-POST\"\r\n    }as const\r\n  }\r\n  \r\n  export let onPostChangeCreator = (text:string)=>{\r\n    return{\r\n       type:\"UPDATE-NEW-POST-TEXT\", newText:text\r\n    }as const\r\n  }\r\n  ","import React from 'react'\r\nimport s from './Posts.module.css'\r\n\r\ntype PostType ={\r\n    message:string\r\n    likeCount:number\r\n}\r\n\r\nconst Posts: React.FC<PostType> = (props)=>{\r\n\r\n    return(   \r\n        <div className={s.item}>\r\n            <img src=\"https://pixelbox.ru/wp-content/uploads/2021/05/ava-vk-animal-91.jpg\"/>\r\n              {props.message}\r\n               <div>\r\n                   <span>like</span>\r\n               </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Posts from './Posts/Posts'\r\nimport {  PostsType } from '../../../redux/profile-reducer'\r\n\r\n\r\ntype PropsType={\r\n  posts:PostsType[]\r\n  newPostText:string\r\n   addPost:()=>void\r\n   updateNewPostText:(text:string)=>void\r\n}\r\n\r\n\r\nconst MyPosts= (props:PropsType)=>{\r\n\r\n  let postsElements = props.posts.map(p => <Posts message={p.message} likeCount={p.likeCount}/> )\r\n\r\n  let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n  let addPost =()=>{\r\n      props.addPost()\r\n  }\r\n\r\n  let onPostChange =()=>{\r\n        let text = newPostElement.current?.value\r\n        if(text){\r\n           props.updateNewPostText(text)\r\n        }\r\n       \r\n       \r\n     }\r\n\r\n    return(\r\n     <div className={s.postsBlock}>\r\n       <h3>My Post</h3> \r\n          <div>\r\n            <div>\r\n               <textarea ref={newPostElement} value ={props.newPostText} onChange={onPostChange}/>\r\n            </div>\r\n            <div>\r\n               <button onClick={addPost}>Add Post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { addPostActionCreator, onPostChangeCreator, PostsType } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state:StateType) =>{\r\n    return{\r\n        posts:state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\nlet  mapDispatchToProps =(dispatch: Dispatch )=>{\r\n    return {\r\n        updateNewPostText:(text:string)=>{\r\n            let action = onPostChangeCreator(text)\r\n            dispatch(action)\r\n        },\r\n        addPost:()=>{\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","\r\nimport React from \"react\"\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileInfo =()=>{\r\n\r\n    return(\r\n    <div>    \r\n        <div>\r\n            <img src=\"https://cdn1.ozone.ru/s3/multimedia-a/c1200/6057606094.jpg\"/>\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n                ava+ description\r\n        </div>\r\n    </div>    \r\n)\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport { ProfilePagePropsType } from '../../redux/profile-reducer';\r\n\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile =()=>{\r\n \r\n    return(\r\n      <div >\r\n          <ProfileInfo/>\r\n          <MyPostsContainer  />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { DialogsPropsType } from \"../../../redux/dialogs-reducer\"\r\n\r\nimport s from \"../Dialogs.module.css\"\r\n\r\n\r\n\r\n\r\n\r\nconst DialogItem =(props:DialogsPropsType)=>{\r\n\r\n    let path = \"/dialogs/\"+props.id\r\n\r\n    return(\r\n        \r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\"\r\nimport s from \"../Dialogs.module.css\"\r\n\r\n\r\n\r\ntype MessageType ={\r\n    message:string\r\n}\r\n\r\n\r\nconst Message : React.FC<MessageType> =(props)=>{\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Message","import React, { ChangeEvent } from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport '../../App'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {  DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\n\r\n\r\n type Propstype={\r\n    dialogsPage: DialogsPageType\r\n    updateNewMessageBody:(body:string)=>void\r\n    sendMessage:()=>void\r\n}\r\n\r\n\r\nconst Dialogs  =(props: Propstype)=>{\r\n\r\n    let body = props.dialogsPage.newMessageBody\r\n    let dialogsElements = props.dialogsPage.dialogs.map(el=> <DialogItem name={el.name} id={el.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(el => <Message message ={el.message}/>)\r\n\r\n    const onChangeMessage = (e:ChangeEvent<HTMLInputElement>)=>{\r\n        let body = e.target.value\r\n        if(body){\r\n            props.updateNewMessageBody(body)\r\n        }\r\n    }\r\n    const  onSendMessage =()=>{\r\n\r\n        props.sendMessage()\r\n    }\r\n\r\n\r\n    return(\r\n     \r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>    \r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <input\r\n                             onChange={onChangeMessage}\r\n                              value={body}\r\n                              placeholder=\"enter message\">\r\n                         </input>\r\n                    </div>\r\n                    <div><button onClick={onSendMessage}>Отправить </button> </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\n\r\n\r\nexport type DialogsPropsType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nexport type MessagesPropsType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n  dialogs: Array<DialogsPropsType>\r\n  messages: Array<MessagesPropsType>\r\n  newMessageBody:string\r\n}\r\n\r\n\r\n\r\n\r\nlet initialState:DialogsPageType ={\r\n  dialogs: [\r\n    { id: 1, name: \"Dimysh\" },\r\n    { id: 2, name: \"Den\" },\r\n    { id: 3, name: \"ArtЁm\" },\r\n    { id: 4, name: \"Slava\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"Hisdvsd\" },\r\n    { id: 3, message: \"Hidsfdsfsdfdsf\" },\r\n    { id: 4, message: \"Hisdfsdfsdfsdfsdfsdf\" },\r\n  ],\r\n  newMessageBody:\"\"\r\n}\r\n\r\n\r\nexport const dialogsReducer =(state=initialState,action: MainActionType)=>{\r\n      \r\n    switch (action.type) {\r\n        case \"UPDATE-NEW-MESSAGE-BODY\":{\r\n           return {\r\n            ...state,\r\n            newMessageBody: action.body\r\n           }\r\n        }\r\n        case \"SEND-MEASSAGE\" :{\r\n          let body = state.newMessageBody\r\n          return {\r\n            ...state,\r\n              messages:[...state.messages,{id:5, message:body}],\r\n\r\n          }\r\n        }\r\n        default:return state\r\n  \r\n      }\r\n\r\n\r\n}\r\n\r\ntype MainActionType = ReturnType<typeof SendMessageActionCreator> |ReturnType<typeof  UpdateNewMessageBodyAC>\r\n\r\nexport let SendMessageActionCreator = ()=>{\r\n    return{\r\n       type:\"SEND-MEASSAGE\"\r\n    }as const\r\n  }\r\n  export let UpdateNewMessageBodyAC = (body:string)=>{\r\n    return{\r\n       type:\"UPDATE-NEW-MESSAGE-BODY\",\r\n       body:body\r\n    }as const\r\n  }","\r\nimport { Dispatch } from \"redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {DialogsPageType, SendMessageActionCreator, UpdateNewMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nlet mapStateToProps =(state:StateType) =>{\r\n    return{\r\n        dialogsPage:state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch: Dispatch)=>{\r\n    return{\r\n        updateNewMessageBody:(body:string)=>{\r\n            dispatch(UpdateNewMessageBodyAC(body))\r\n        },\r\n        sendMessage:()=>{\r\n            dispatch(SendMessageActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer","import React from \"react\";\r\n\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name:string\r\n    status: string\r\n    location: locationPropsType\r\n    photos:PhotoPropsType\r\n  }\r\nexport type PhotoPropsType = {\r\n   small:string\r\n   big:string\r\n}\r\n\r\n\r\nexport type locationPropsType = {\r\n    city:string\r\n    country:string\r\n  }\r\n\r\n  \r\n  type InitialStateType = {\r\n    users: UsersType[]\r\n      pageSize: number\r\n      totalUsersCount:number\r\n      currentPage:number\r\n      isFetching:boolean\r\n  }\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    users:[],\r\n    pageSize: 5,\r\n    totalUsersCount:20,\r\n    currentPage:1,\r\n    isFetching:true\r\n  }\r\n\r\nexport const usersReducer =(state=initialState,action: MainActionType)=>{\r\n    switch (action.type) {\r\n        case \"FOLLOW\":{\r\n              return {\r\n                ...state,\r\n                users: state.users.map(u =>{\r\n                  if(u.id === action.userId){\r\n                    return {...u, followed:true}\r\n                  }\r\n                  return u\r\n                })\r\n              }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n          return {\r\n            ...state,\r\n            users: state.users.map(u =>{\r\n              if(u.id === action.userId){\r\n                return {...u, followed:false}\r\n              }\r\n              return u\r\n            })\r\n          }\r\n        }\r\n        case \"SET_USERS\":{\r\n         return {...state, users: action.users}\r\n        }\r\n        case \"SET_CURRENT_PAGE\":{\r\n            return {...state,currentPage:action.currentPage }\r\n        }\r\n        case \"SET_TOTAL_USERS_COUNT\":{\r\n            return {...state,totalUsersCount:action.totalUsersCount }\r\n        }\r\n        case \"TOGGLE_IS_FETCHING\":{\r\n            return {...state,isFetching:action.isFetching }\r\n        }\r\n        default:return state\r\n    }\r\n}\r\ntype MainActionType = ReturnType<typeof followAC > | ReturnType<typeof  unFollowAC>\r\n    | ReturnType<typeof setUsersAC > | ReturnType<typeof setCurrentPageAC  > | ReturnType<typeof setUsersTotalCountAC>\r\n    | ReturnType<typeof setIsFetchingAC>\r\n\r\nexport let followAC =(userId:number)=> {\r\n  return {\r\n    type:'FOLLOW', userId\r\n  }as const\r\n  \r\n}\r\n\r\nexport let unFollowAC =(userId:number)=> {\r\n  return{type :'UNFOLLOW',userId}as const\r\n}\r\n\r\nexport let setUsersAC = (users:UsersType[])=>{\r\n  return{type:\"SET_USERS\", users}as const\r\n}\r\nexport let setCurrentPageAC = (currentPage:number)=>{\r\n    return{type:\"SET_CURRENT_PAGE\", currentPage}as const\r\n}\r\nexport let setUsersTotalCountAC = (totalUsersCount:number)=>{\r\n    return{type:\"SET_TOTAL_USERS_COUNT\",totalUsersCount}as const\r\n}\r\n\r\nexport let setIsFetchingAC = (isFetching:boolean)=>{\r\n    return{\r\n        type:\"TOGGLE_IS_FETCHING\", isFetching\r\n    }as const\r\n}","export default __webpack_public_path__ + \"static/media/user.4583aa6f.png\";","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/imges/user.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType ={\r\n    follow:(userId:number)=>void\r\n    unfollow:(userId:number)=>void\r\n    users:UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage:number\r\n    onPageChanged :(p:number)=>void\r\n}\r\n\r\n\r\n\r\n\r\nlet Users =(props:PropsType)=>{\r\n    let pagesCount =Math.ceil( props.totalUsersCount/props.pageSize)\r\n    let pages =[]\r\n    for(let i =1; i <=pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n   console.log(props.totalUsersCount, props.pageSize)\r\n    return(\r\n        (\r\n            <div>\r\n\r\n                <div>\r\n                    { pages.map(p => {\r\n                        return <span onClick={()=>{props.onPageChanged(p)} } className={props.currentPage ===p ? styles.selectedPage: \"\"}>{p}</span>\r\n                    })}\r\ns                </div>\r\n                {props.users.map( u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to= {`/profile/${u.id}`}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.photo}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed ? <button onClick={()=>{props.unfollow(u.id)}}> UNFollow</button>:<button onClick={()=>{props.follow(u.id)}}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.city\"}</div>\r\n                        <div>{\"u.location.country\"}</div>\r\n                    </span>\r\n                </span>\r\n\r\n                </div>)}\r\n            </div>\r\n        )\r\n    )\r\n}\r\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.3b867e4e.svg\";","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    followAC,\r\n    setCurrentPageAC, setIsFetchingAC,\r\n    setUsersAC,\r\n    setUsersTotalCountAC,\r\n    unFollowAC,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport preloader from \"../../assets/imges/preloader.svg\"\r\n\r\ntype MSTPType ={\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage:number\r\n    isFetching:boolean\r\n}\r\n\r\ntype MDTPType = {\r\n    follow:(userId:number)=>void\r\n    unfollow:(userId:number)=>void\r\n    setUsers:(users:any)=>void\r\n    setCurrentPage:(currentPage:number)=>void\r\n    setUsersTotalCount:(totalCount:number)=>void\r\n    toggleIsFetching:(isFetching:boolean)=>void\r\n}\r\n\r\ntype PropsType = MSTPType & MDTPType\r\n\r\nclass UsersContainer extends  React.Component<PropsType>{\r\n   componentDidMount() {\r\n       this.props.toggleIsFetching(true)\r\n            axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n                .then(response => {\r\n                    this.props.toggleIsFetching(false)\r\n                    this.props.setUsers(response.data.items)\r\n                    this.props.setUsersTotalCount(response.data.totalCount)\r\n                })\r\n    }\r\n\r\n\r\n    onPageChanged =(p:number)=>{\r\n        this.props.setCurrentPage(p)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.isFetching ? <img src={preloader}/> :null}\r\n                 <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps =(state: StateType) => {\r\n    return{\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching:state.usersPage.isFetching\r\n    }\r\n}\r\n// const mapDispatchToProps =(dispatch: Dispatch)=> {\r\n//     return{\r\n//         follow:(userId:number)=>{\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow:(userId:number)=>{\r\n//             dispatch(unFollowAC(userId))\r\n//         },\r\n//         setUsers:(users:UsersType[])=>{\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage:(currentPage:number)=>{\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setUsersTotalCount:(totalCount:number)=>{\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching:(isFetching:boolean)=>{\r\n//             dispatch(setIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    follow:followAC,\r\n    unfollow:unFollowAC,\r\n    setUsers:setUsersAC,\r\n    setCurrentPage:setCurrentPageAC,\r\n    setUsersTotalCount:setUsersTotalCountAC,\r\n    toggleIsFetching:setIsFetchingAC\r\n})(UsersContainer)","\nimport './App.css'\nimport {BrowserRouter,Route} from \"react-router-dom\"\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n\nfunction App() {\n  return (\n   <BrowserRouter>\n      <div className=\"app-wrapper\">\n          <Header/>\n          <Navbar/>\n          <div className=\"app_wrapper_content\">\n            <Route path =\"/dialogs\" render={()=><DialogsContainer />}/>\n            <Route path=\"/profile\" render={()=>\n            <Profile/>}/>\n            <Route path =\"/users\" render={()=><UsersContainer/>}/>\n          </div>\n        </div>  \n      </BrowserRouter> \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { combineReducers, createStore } from 'redux'\r\nimport { dialogsReducer } from './dialogs-reducer'\r\nimport { profileReducer } from './profile-reducer'\r\nimport {usersReducer} from \"./users-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\n let store = createStore(reducers)\r\nexport type StateType = ReturnType<typeof reducers>;\r\n\r\n\r\n\r\n export default store","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport { Provider } from 'react-redux';\n\n\n\n\n  ReactDOM.render(\n      <Provider store={store}>\n        <App  />  {/* state={store.getState()} dispatch={store.dispatch} */}\n      </Provider>,\n    document.getElementById('root')\n  );\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2bApI\",\"item\":\"Navbar_item__1344C\",\"activeLink\":\"Navbar_activeLink__2k6Ll\"};"],"sourceRoot":""}